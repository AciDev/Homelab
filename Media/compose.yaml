services:
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp
      - 8388:8388/tcp
      - 8388:8388/udp
      - 9080:9080/tcp # Qbit
      - 9080:9080/udp # Qbit
      - 9696:9696/tcp # Prowlarr
      - 9696:9696/udp # Prowlarr
    volumes:
      - type: bind
        source: ./../Docker-data/Media/Gluetun/data
        target: /gluetun 
    networks:
      proxy:
      gluetun_network:
          ipv4_address: 172.16.100.10
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_PROVIDER}
      - OPENVPN_USER=${VPN_USER}
      - OPENVPN_PASSWORD=${VPN_PASS}
      - SERVER_REGIONS=${VPN_REGIONS}
      - TZ=${CONTAINER_TZ}
      - UPDATER_PERIOD=24h
      - VPN_PORT_FORWARDING=off
      - PORT_FORWARD_ONLY=false
      - FIREWALL_OUTBOUND_SUBNETS=${VPN_OUTBOUND_SUBNET}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent-secure.entrypoints=https"
      - "traefik.http.routers.qbittorrent-secure.rule=Host(`qbittorrent.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.qbittorrent-secure.tls=true"
      - "traefik.http.routers.qbittorrent-secure.service=qbittorrent"
      - "traefik.http.services.qbittorrent.loadbalancer.server.scheme=http" 
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=9080"
      - "traefik.http.routers.prowlarr-secure.entrypoints=https"
      - "traefik.http.routers.prowlarr-secure.rule=Host(`prowlarr.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.prowlarr-secure.tls=true"
      - "traefik.http.routers.prowlarr-secure.service=prowlarr"
      - "traefik.http.services.prowlarr.loadbalancer.server.scheme=http" 
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
      - "traefik.docker.network=proxy"

  qbittorrent:
    image: ghcr.io/hotio/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=${CONTAINER_TZ}
      - WEBUI_PORTS=9080/tcp,9080/udp
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./../Docker-data/Media/Qbittorrent/config
        target: /config  
      - type: bind
        source: ./../Docker-data/Media/Media/Downloads
        target: /data/downloads
    depends_on:
      - gluetun
    
  prowlarr:
    image: ghcr.io/hotio/prowlarr:latest
    container_name: prowlarr
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=${CONTAINER_TZ}
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./../Docker-data/Media/Prowlarr/config
        target: /config  
    depends_on:
      - gluetun

  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr:latest
    ports:
      - "8989:8989"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=${CONTAINER_TZ}
    restart: unless-stopped
    networks:
      proxy:
      gluetun_network:
          ipv4_address: 172.16.100.20
    volumes:
      - type: bind
        source: ./../Docker-data/Media/Sonarr/config
        target: /config  
      - type: bind
        source: ./../Docker-data/Media/Media/TV
        target: /data/tv
      - type: bind
        source: ./../Docker-data/Media/Media/Movies
        target: /data/movies
      - type: bind
        source: ./../Docker-data/Media/Media/Downloads
        target: /data/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr-secure.entrypoints=https"
      - "traefik.http.routers.sonarr-secure.rule=Host(`sonarr.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.sonarr-secure.tls=true"
      - "traefik.http.routers.sonarr-secure.service=sonarr"
      - "traefik.http.services.sonarr.loadbalancer.server.scheme=http" 
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.docker.network=proxy"
  
  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr:latest
    ports:
      - "7878:7878"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=${CONTAINER_TZ}
    restart: unless-stopped
    networks:
      proxy:
      gluetun_network:
          ipv4_address: 172.16.100.30
    volumes:
      - type: bind
        source: ./../Docker-data/Media/Radarr/config
        target: /config  
      - type: bind
        source: ./../Docker-data/Media/Media/TV
        target: /data/tv
      - type: bind
        source: ./../Docker-data/Media/Media/Movies
        target: /data/movies
      - type: bind
        source: ./../Docker-data/Media/Media/Downloads
        target: /data/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr-secure.entrypoints=https"
      - "traefik.http.routers.radarr-secure.rule=Host(`radarr.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.radarr-secure.tls=true"
      - "traefik.http.routers.radarr-secure.service=radarr"
      - "traefik.http.services.radarr.loadbalancer.server.scheme=http" 
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.docker.network=proxy"
  
  overseerr:
    container_name: overseerr
    image: ghcr.io/hotio/overseerr:latest
    ports:
      - "5055:5055"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=${CONTAINER_TZ}
    restart: unless-stopped
    networks:
      - proxy
    volumes:
      - type: bind
        source: ./../Docker-data/Media/Overseerr/config
        target: /config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.overseerr-secure.entrypoints=https"
      - "traefik.http.routers.overseerr-secure.rule=Host(`overseerr.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.overseerr-secure.tls=true"
      - "traefik.http.routers.overseerr-secure.service=overseerr"
      - "traefik.http.services.overseerr.loadbalancer.server.scheme=http" 
      - "traefik.http.services.overseerr.loadbalancer.server.port=5055"
      - "traefik.docker.network=proxy"  
  
  flaresolverr:
    container_name: flaresolverr
    image: ghcr.io/flaresolverr/flaresolverr:latest
    ports:
      - "8191:8191"
    networks:
      gluetun_network:
          ipv4_address: 172.16.100.40
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - TZ=${CONTAINER_TZ}
    restart: unless-stopped
  
  plex:
    container_name: plex
    image: ghcr.io/hotio/plex
    ports:
      - "32400:32400"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=${CONTAINER_TZ}
      - PLEX_CLAIM_TOKEN=${PLEX_CLAIM_TOKEN}
      - PLEX_BETA_INSTALL=false
      - PLEX_PURGE_CODECS=false
    networks:
      - proxy
    volumes:
      - type: bind
        source: ./../Docker-data/Media/Plex/transcode
        target: /transcode
      - type: bind
        source: ./../Docker-data/Media/Plex/config
        target: /config      
      - type: bind
        source: ./../Docker-data/Media/Media/TV
        target: /data/tv
      - type: bind
        source: ./../Docker-data/Media/Media/Movies
        target: /data/movies
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex-secure.entrypoints=https"
      - "traefik.http.routers.plex-secure.rule=Host(`plex.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.plex-secure.tls=true"
      - "traefik.http.routers.plex-secure.service=plex"
      - "traefik.http.services.plex.loadbalancer.server.scheme=http" 
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
      - "traefik.docker.network=proxy"
  
  tautulli:
    container_name: tautulli
    image: ghcr.io/hotio/tautulli
    ports:
      - "8181:8181"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=${CONTAINER_TZ}
      - WEBUI_PORTS=8181/tcp,8181/udp
    networks:
      - proxy
    volumes:
      - type: bind
        source: ./../Docker-data/Media/Tautulli/config
        target: /config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tautulli-secure.entrypoints=https"
      - "traefik.http.routers.tautulli-secure.rule=Host(`tautulli.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.tautulli-secure.tls=true"
      - "traefik.http.routers.tautulli-secure.service=tautulli"
      - "traefik.http.services.tautulli.loadbalancer.server.scheme=http" 
      - "traefik.http.services.tautulli.loadbalancer.server.port=8181"
      - "traefik.docker.network=proxy"
  
  jellyseerr:
    container_name: jellyseerr
    image: ghcr.io/hotio/jellyseerr
    ports:
      - "5056:5055"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=${CONTAINER_TZ}
    networks:
      - proxy
    volumes:
      - type: bind
        source: ./../Docker-data/Media/Jellyseerr/config
        target: /config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyseerr-secure.entrypoints=https"
      - "traefik.http.routers.jellyseerr-secure.rule=Host(`jellyseerr.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.jellyseerr-secure.tls=true"
      - "traefik.http.routers.jellyseerr-secure.service=jellyseerr"
      - "traefik.http.services.jellyseerr.loadbalancer.server.scheme=http" 
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"
      - "traefik.docker.network=proxy"
  
  jellyfin:
    container_name: jellyfin
    image: ghcr.io/hotio/jellyfin
    ports:
      - "8096:8096"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=${CONTAINER_TZ}
    networks:
      - proxy
    volumes:
      - type: bind
        source: ./../Docker-data/Media/Media/TV
        target: /data/tv
      - type: bind
        source: ./../Docker-data/Media/Media/Movies
        target: /data/movies
      - type: bind
        source: ./../Docker-data/Media/Jellyfin/config
        target: /config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin-secure.entrypoints=https"
      - "traefik.http.routers.jellyfin-secure.rule=Host(`jellyfin.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.jellyfin-secure.tls=true"
      - "traefik.http.routers.jellyfin-secure.service=jellyfin"
      - "traefik.http.services.jellyfin.loadbalancer.server.scheme=http" 
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
      - "traefik.docker.network=proxy"

networks:
  gluetun_network:
    ipam:
      driver: default
      config:
        - subnet: "172.16.100.0/24"
  proxy:
    external: true