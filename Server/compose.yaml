services:
  ntfy:
    container_name: ntfy
    image: binwiederhier/ntfy:latest
    command:
      - serve
    networks:
      - proxy
    environment:
      - NTFY_BASE_URL=https://ntfy.${SERVER_DOMAIN}
      - NTFY_WEB_ROOT=${WEB_ROOT}
      - TZ=${CONTAINER_TZ}
      - NTFY_CACHE_FILE=/var/cache/ntfy/cache.db
      - NTFY_ATTACHMENT_CACHE_DIR=/var/cache/ntfy/attachments
      - NTFY_AUTH_FILE=/etc/ntfy/auth.db
      - NTFY_AUTH_DEFAULT_ACCESS=deny-all
      - NTFY_BEHIND_PROXY=true
      - NTFY_ENABLE_LOGIN=true
      - NTFY_UPSTREAM_BASE_URL=https://ntfy.sh
      - NTFY_CACHE_DURATION=12h
      - NTFY_WEB_PUSH_FILE=/etc/ntfy/webpush.db
      - NTFY_WEB_PUSH_PUBLIC_KEY=${WEB_PUSH_PUBLIC_KEY}
      - NTFY_WEB_PUSH_PRIVATE_KEY=${WEB_PUSH_PRIVATE_KEY}
      - NTFY_WEB_PUSH_EMAIL_ADDRESS=${WEB_PUSH_EMAIL_ADDRESS}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ntfy-secure.entrypoints=https"
      - "traefik.http.routers.ntfy-secure.rule=Host(`ntfy.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.ntfy-secure.tls=true"
      - "traefik.http.routers.ntfy-secure.service=ntfy"
      - "traefik.http.services.ntfy.loadbalancer.server.scheme=http"
      - "traefik.http.services.ntfy.loadbalancer.server.port=80"
      - "traefik.docker.network=proxy"
    user: 1000:1000
    volumes:
      - type: bind
        source: /opt/homelab/Docker-data/Server/Ntfy/cache
        target: /var/cache/ntfy
      - type: bind
        source: /opt/homelab/Docker-data/Server/Ntfy/data
        target: /etc/ntfy
    restart: unless-stopped
  atuin:
    container_name: atuin
    restart: unless-stopped
    image: ghcr.io/atuinsh/atuin:latest
    command: server start
    depends_on:
      atuin_postgresql:
        condition: service_healthy
    networks:
      - proxy
    volumes:
      - type: bind
        source: /opt/homelab/Docker-data/Server/Atuin/config
        target: /config
    links:
      - atuin_postgresql:db
    environment:
      ATUIN_HOST: "0.0.0.0"
      ATUIN_OPEN_REGISTRATION: "$ATUIN_APP_REG"
      ATUIN_DB_URI: postgres://$ATUIN_DB_USERNAME:$ATUIN_DB_PASSWORD@db/$ATUIN_DB_NAME
      ATUIN_PATH: "$ATUIN_APP_PATH"
      RUST_LOG: info,atuin_server=debug
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.atuin-secure.entrypoints=https"
      - "traefik.http.routers.atuin-secure.rule=Host(`atuin.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.atuin-secure.tls=true"
      - "traefik.http.routers.atuin-secure.service=atuin"
      - "traefik.http.services.atuin.loadbalancer.server.scheme=http"
      - "traefik.http.services.atuin.loadbalancer.server.port=8888"
      - "traefik.docker.network=proxy"
  atuin_postgresql:
    container_name: atuin_postgresql
    hostname: atuin_postgesql
    image: postgres:latest
    restart: unless-stopped
    networks:
      - proxy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $${ATUIN_DB_NAME} -U $${ATUIN_DB_USERNAME}",
        ]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - type: bind
        source: /opt/homelab/Docker-data/Server/Atuin/database
        target: /var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${ATUIN_DB_USERNAME}
      POSTGRES_PASSWORD: ${ATUIN_DB_PASSWORD}
      POSTGRES_DB: ${ATUIN_DB_NAME}

networks:
  proxy:
    external: true
