services:
  ollama:
    image: ollama/ollama:latest
    hostname: ollama
    container_name: ollama
    networks:
      - ollama_network
    restart: unless-stopped
    tty: true
    healthcheck:
      test: ["CMD-SHELL", "ps -aux | grep '/bin/ollama serve' | grep -v 'grep'"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - type: bind
        source: /opt/homelab/Docker-data/AI/Ollama/data
        target: /root/.ollama

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    hostname: open-webui
    container_name: open-webui
    extra_hosts:
      - host.docker.internal:host-gateway
    networks:
      - proxy
      - ollama_network
    restart: unless-stopped
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - OAUTH_CLIENT_ID=${WEBUI_CLIENT_ID}
      - OAUTH_CLIENT_SECRET=${WEBUI_CLIENT_SECRET}
      - OPENID_PROVIDER_URL=https://authentik.${SERVER_DOMAIN}/application/o/${WEBUI_SLUG}/.well-known/openid-configuration
      - OAUTH_PROVIDER_NAME=${WEBUI_PROVIDER_NAME}
      - OAUTH_SCOPES=${WEBUI_SCOPES}
      - OPENID_REDIRECT_URI=https://ollama.${SERVER_DOMAIN}/oauth/oidc/callback
    volumes:
      - type: bind
        source: /opt/homelab/Docker-data/AI/OpenWebUI/data
        target: /app/backend/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ollama-secure.entrypoints=https"
      - "traefik.http.routers.ollama-secure.rule=Host(`ollama.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.ollama-secure.tls=true"
      - "traefik.http.routers.ollama-secure.service=ollama"
      - "traefik.http.services.ollama.loadbalancer.server.scheme=http" 
      - "traefik.http.services.ollama.loadbalancer.server.port=8080"
      - "traefik.docker.network=proxy"
    depends_on:
      ollama:
        condition: service_healthy
networks:
  ollama_network:
    ipam:
      driver: default
      config:
        - subnet: "172.16.110.0/24"
  proxy:
    external: true